name: Deploy to K8s with Helm

on:
  workflow_dispatch:  # Manual Trigger
    inputs:
      zone:
        description: "Deployment Zone"
        required: true
        default: "sit"

  repository_dispatch:  # Trigger ผ่าน API
    types: [deploy]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 🔹 Login to Kubernetes Cluster
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0

      - name: Create .kube directory
        run: |
          mkdir -p $HOME/.kube

      - name: Set up KUBECONFIG based on zone
        run: |
          ZONE=${{ github.event.inputs.zone || github.event.client_payload.zone || 'dev' }}
          if [[ "$ZONE" == "dev" ]]; then
            echo "${{ secrets.KUBE_CONFIG_DEV }}" | base64 --decode > $HOME/.kube/config
          elif [[ "$ZONE" == "staging" ]]; then
            echo "${{ secrets.KUBE_CONFIG_STAGING }}" | base64 --decode > $HOME/.kube/config
          elif [[ "$ZONE" == "prod" ]]; then
            echo "${{ secrets.KUBE_CONFIG_PROD }}" | base64 --decode > $HOME/.kube/config
          else
            echo "Unknown zone: $ZONE" && exit 1
          fi
          export KUBECONFIG=$HOME/.kube/config
          ls -l $HOME/.kube/config

      # 🔹 อ่านค่า `image.repository` และ `image.tag` จาก `app1/values.yml`
      - name: Read image from app1/values.yml
        id: read_values
        run: |
          ls -lrt
          IMAGE_REPO=$(yq e '.image.repository' ./app1/values.yaml)
          IMAGE_TAG=$(yq e '.image.tag' ./app1/values.yaml)
          echo "IMAGE_REPO=$IMAGE_REPO"
          echo "IMAGE_TAG=$IMAGE_TAG"
          echo "IMAGE_REPO=$IMAGE_REPO" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # 🔹 Deploy ด้วย Helm
      - name: Deploy with Helm
        run: |
          IMAGE_REPO=${{ env.IMAGE_REPO }}
          IMAGE_TAG=${{ env.IMAGE_TAG }}

          helm upgrade --install app1 ./app1 \
            --namespace $ZONE --create-namespace \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG
